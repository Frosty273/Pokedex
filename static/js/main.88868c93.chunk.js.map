{"version":3,"sources":["utils/capitaliseName.js","components/pokedex.js","utils/filterMoveType.js","components/pokemon.js","utils/displayEggGroup.js","utils/determineAbility.js","utils/displayStat.js","App.js","serviceWorker.js","index.js"],"names":["capitaliseName","move_name","space","replace","lastIndexOf","slice","charAt","toUpperCase","useStyles","makeStyles","theme","pokedexContainer","paddingTop","paddingLeft","paddingRight","cardMedia","margin","cardContent","textAlign","searchContainer","display","backgroundColor","fade","palette","common","white","marginTop","marginBottom","searchIcon","alignSelf","searchInput","width","themeToggleContainer","align","darkModeToggle","darkModeToggleText","color","Pokedex","props","history","classes","React","useState","pokemonData","setPokemonData","filter","setFilter","darkMode","setDarkMode","createMuiTheme","type","useEffect","axios","get","then","response","results","data","newPokemonData","forEach","pokemon","index","id","name","sprite","ThemeProvider","Paper","style","height","AppBar","position","Toolbar","className","TextField","label","variant","onChange","event","target","value","Switch","checked","Typography","Grid","container","spacing","Object","keys","map","pokemonId","includes","item","xs","sm","key","Card","onClick","push","CardMedia","image","CardContent","getPokemonCard","CircularProgress","filterMoveType","version_group_detail_object","learn_method","move_learn_method","version_group","spinnerStyle","borderWidth","spinnerWrapperStyle","marginLeft","marginRight","returnToPokedex","types","borderRadius","Pokemon","match","params","undefined","setPokemon","pokemonSpecies","setPokemonSpecies","typeColours","normal","background","fire","fighting","water","flying","grass","poison","electric","ground","psychic","rock","ice","bug","dragon","ghost","dark","steel","fairy","Badge","styled","div","inputType","catch","error","nextPreviousPokemon","num","Button","weight","sprites","abilities","stats","moves","front_default","front_shiny","back_default","back_shiny","console","log","flavor_text_entries","description","some","text","language","flavor_text","femaleRate","gender_rate","genderRatioFemale","genderRatioMale","move_learn_level","move","version_group_details","move_level","level_learned_at","eggGroups","items","sort","first","second","Container","Row","Col","md","Header","src","alt","Body","ability","string","abilityTotalNum","determineAbility","length","egg_groups","stat","ProgressBar","now","base_stat","max","generatePokemonData","App","exact","path","render","Boolean","window","location","hostname","createBrowserHistory","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.88868c93.chunk.js","sourcesContent":["export function capitaliseName(move_name) {\r\n  move_name = move_name.replace(/-/gi, \" \");\r\n  let space = move_name.lastIndexOf(\" \");\r\n  if (space !== -1) {\r\n    move_name =\r\n      move_name.slice(0, space + 1) +\r\n      move_name.charAt(space + 1).toUpperCase() +\r\n      move_name.slice(space + 2);\r\n  }\r\n  return move_name.charAt(0).toUpperCase() + move_name.slice(1);\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  CardMedia,\r\n  Typography,\r\n  TextField,\r\n  Paper,\r\n  Switch,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  makeStyles,\r\n  fade,\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n} from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { capitaliseName } from \"../utils/capitaliseName\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pokedexContainer: {\r\n    paddingTop: \"20px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n  cardMedia: {\r\n    margin: \"auto\",\r\n  },\r\n  cardContent: {\r\n    textAlign: \"center\",\r\n  },\r\n  searchContainer: {\r\n    display: \"flex\",\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    paddingLeft: \"20px\",\r\n    paddingRight: \"20px\",\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  searchIcon: {\r\n    alignSelf: \"flex-end\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  searchInput: {\r\n    width: \"200px\",\r\n    margin: \"5px\",\r\n  },\r\n  themeToggleContainer: {\r\n    align: \"center\",\r\n  },\r\n  darkModeToggle: {\r\n    display: \"flex\",\r\n  },\r\n  darkModeToggleText: {\r\n    align: \"center\",\r\n    color: \"black\",\r\n  },\r\n}));\r\n\r\nconst Pokedex = (props) => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [pokemonData, setPokemonData] = React.useState({});\r\n  const [filter, setFilter] = React.useState(\"\");\r\n  const [darkMode, setDarkMode] = React.useState(false);\r\n\r\n  const handleSearchChange = (event) => {\r\n    setFilter(event.target.value);\r\n  };\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: darkMode ? \"dark\" : \"light\",\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon?limit=893`)\r\n      .then(function (response) {\r\n        const { data } = response;\r\n        const { results } = data;\r\n        const newPokemonData = {};\r\n        results.forEach((pokemon, index) => {\r\n          newPokemonData[index + 1] = {\r\n            id: index + 1,\r\n            name: pokemon.name,\r\n            sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${\r\n              index + 1\r\n            }.png`,\r\n          };\r\n        });\r\n        setPokemonData(newPokemonData);\r\n      });\r\n  }, []);\r\n\r\n  const getPokemonCard = (pokemonId) => {\r\n    const { id, name, sprite } = pokemonData[pokemonId];\r\n\r\n    return (\r\n      <Grid item xs={12} sm={3} key={pokemonId}>\r\n        <Card onClick={() => history.push(`/${pokemonId}`)}>\r\n          <CardMedia\r\n            className={classes.cardMedia}\r\n            image={sprite}\r\n            style={{ width: \"130px\", height: \"130px\" }}\r\n          />\r\n          <CardContent className={classes.cardContent}>\r\n            <Typography>{`${id}. ${capitaliseName(name)}`}</Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Paper style={{ height: \"100%\" }}>\r\n        <div>\r\n          <AppBar position=\"static\">\r\n            <Toolbar>\r\n              <div className={classes.searchContainer}>\r\n                <SearchIcon className={classes.searchIcon} />\r\n                <TextField\r\n                  className={classes.searchInput}\r\n                  label=\"Pokemon\"\r\n                  variant=\"standard\"\r\n                  onChange={handleSearchChange}\r\n                />\r\n              </div>\r\n              <div className={classes.themeToggleContainer}>\r\n                <Switch\r\n                  className={classes.darkModeToggle}\r\n                  checked={darkMode}\r\n                  onChange={() => setDarkMode(!darkMode)}\r\n                />\r\n                <Typography className={classes.darkModeToggleText}>\r\n                  Dark Theme\r\n                </Typography>\r\n              </div>\r\n            </Toolbar>\r\n          </AppBar>\r\n          {pokemonData ? (\r\n            <Grid container spacing={2} className={classes.pokedexContainer}>\r\n              {Object.keys(pokemonData).map(\r\n                (pokemonId) =>\r\n                  pokemonData[pokemonId].name.includes(filter) &&\r\n                  getPokemonCard(pokemonId)\r\n              )}\r\n            </Grid>\r\n          ) : (\r\n            <CircularProgress />\r\n          )}\r\n        </div>\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Pokedex;\r\n","export function filterMoveType(\r\n  move_name,\r\n  version_group_detail_object,\r\n  learn_method\r\n) {\r\n  const moves = version_group_detail_object.map((value) =>\r\n    value.move_learn_method.name === learn_method &&\r\n    value.version_group.name === \"ultra-sun-ultra-moon\"\r\n      ? value.move_learn_method.name\r\n      : null\r\n  );\r\n  return moves.includes(learn_method) ? move_name : null;\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Typography, CircularProgress, Button } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Container, Row, Col, Card, ProgressBar } from \"react-bootstrap\";\r\nimport { displayStat } from \"../utils/displayStat\";\r\nimport { determineAbility } from \"../utils/determineAbility\";\r\nimport { filterMoveType } from \"../utils/filterMoveType\";\r\nimport { capitaliseName } from \"../utils/capitaliseName\";\r\nimport styled from \"styled-components\";\r\nimport { displayEggGroup } from \"../utils/displayEggGroup\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  spinnerStyle: {\r\n    width: \"10rem\",\r\n    height: \"10rem\",\r\n    borderWidth: \"1rem\",\r\n  },\r\n  spinnerWrapperStyle: {\r\n    // marginTop: \"500px\",\r\n    // alignItems: 'center'\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    width: \"100%\",\r\n  },\r\n  returnToPokedex: {\r\n    align: \"flex\",\r\n    marginBottom: \"10px\",\r\n    marginRight: \"50px\",\r\n    backgroundColor: \"#3F51F5\",\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#3F51F5\",\r\n    },\r\n  },\r\n  types: {\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    borderRadius: \"20px\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\",\r\n    width: \"80px\",\r\n    marginBottom: \"5px\",\r\n  },\r\n}));\r\n\r\nconst Pokemon = (props) => {\r\n  const { match, history } = props;\r\n  const { params } = match;\r\n  const { pokemonId } = params;\r\n  const [pokemon, setPokemon] = React.useState(undefined);\r\n  const [pokemonSpecies, setPokemonSpecies] = React.useState(undefined);\r\n  const classes = useStyles();\r\n\r\n  const typeColours = {\r\n    normal: {\r\n      background: \"#A8A878\",\r\n      \"border-color\": \"#6D6D4E\",\r\n    },\r\n    fire: {\r\n      background: \"#F08030\",\r\n      \"border-color\": \"#9C531F\",\r\n    },\r\n    fighting: {\r\n      background: \"#C03028\",\r\n      \"border-color\": \"#7D1F1A\",\r\n    },\r\n    water: {\r\n      background: \"#6890F0\",\r\n      \"border-color\": \"#445E9C\",\r\n    },\r\n    flying: {\r\n      background: \"#A890F0\",\r\n      \"border-color\": \"#6D5E9C\",\r\n    },\r\n    grass: {\r\n      background: \"#78C850\",\r\n      \"border-color\": \"#4E8234\",\r\n    },\r\n    poison: {\r\n      background: \"#A040A0\",\r\n      \"border-color\": \"#682A68\",\r\n    },\r\n    electric: {\r\n      background: \"#F8D030\",\r\n      \"border-color\": \"#A1871F\",\r\n    },\r\n    ground: {\r\n      background: \"#E0C068\",\r\n      \"border-color\": \"#927D44\",\r\n    },\r\n    psychic: {\r\n      background: \"#F85888\",\r\n      \"border-color\": \"#A13959\",\r\n    },\r\n    rock: {\r\n      background: \"#B8A038\",\r\n      \"border-color\": \"#786824\",\r\n    },\r\n    ice: {\r\n      background: \"#98D8D8\",\r\n      \"border-color\": \"#638D8D\",\r\n    },\r\n    bug: {\r\n      background: \"#A8B820\",\r\n      \"border-color\": \"#6D7815\",\r\n    },\r\n    dragon: {\r\n      background: \"#7038F8\",\r\n      \"border-color\": \"#4924A1\",\r\n    },\r\n    ghost: {\r\n      background: \"#705898\",\r\n      \"border-color\": \"#493963\",\r\n    },\r\n    dark: {\r\n      background: \"#705848\",\r\n      \"border-color\": \"#49392F\",\r\n    },\r\n    steel: {\r\n      background: \"#B8B8D0\",\r\n      \"border-color\": \"#787887\",\r\n    },\r\n    fairy: {\r\n      background: \"#EE99AC\",\r\n      \"border-color\": \"#9B6470\",\r\n    },\r\n  };\r\n\r\n  const Badge = styled.div`\r\n    background: ${(props) => typeColours[props.inputType][\"background\"]};\r\n    border-color: ${(props) => typeColours[props.inputType][\"border-color\"]};\r\n    outline: 0;\r\n  `;\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}`)\r\n      .then(function (response) {\r\n        const { data } = response;\r\n        setPokemon(data);\r\n      })\r\n      .catch(function (error) {\r\n        setPokemon(false);\r\n      });\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon-species/${pokemonId}/`)\r\n      .then(function (response) {\r\n        const { data } = response;\r\n        setPokemonSpecies(data);\r\n      })\r\n      .catch(function (error) {\r\n        setPokemonSpecies(false);\r\n      });\r\n  }, [pokemonId]);\r\n\r\n  const nextPreviousPokemon = (num) => {\r\n    const { id } = pokemon;\r\n    if (id + num === 0) {\r\n      return 1;\r\n    } else if (id + num === 894) {\r\n      return 893;\r\n    }\r\n    return id + num;\r\n  };\r\n\r\n  // const getEggGroup = async (name, eggGroups) => {\r\n  //   const groups = Promise.all(\r\n  //     (await eggGroups).results.map(async (group) => {\r\n  //       const response = await fetch(group.url).then((res) => res.json());\r\n  //       const n = response.pokemon_species.some((pokemon) => {\r\n  //         if (name === pokemon.name) {\r\n  //           return true;\r\n  //         }\r\n  //         return false;\r\n  //       });\r\n  //       return n ? group.name : n;\r\n  //     })\r\n  //   );\r\n  //   return groups.then((res) => res.filter((n) => n));\r\n  // };\r\n\r\n  const generatePokemonData = () => {\r\n    const {\r\n      name,\r\n      height,\r\n      weight,\r\n      types,\r\n      sprites,\r\n      abilities,\r\n      stats,\r\n      moves,\r\n    } = pokemon;\r\n    const { front_default, front_shiny, back_default, back_shiny } = sprites;\r\n\r\n    // const a = fetch(\"https://pokeapi.co/api/v2/egg-group\").then((res) =>\r\n    //   res.json()\r\n    // );\r\n\r\n    // getEggGroup(name, a).then((res) => console.log(\"Groups:\", res));\r\n\r\n    console.log(pokemonSpecies.flavor_text_entries);\r\n    let description = \"\";\r\n    pokemonSpecies.flavor_text_entries.some((text) => {\r\n      if (text.language.name === \"en\") {\r\n        description = text.flavor_text;\r\n        return;\r\n      }\r\n    });\r\n\r\n    console.log(pokemonSpecies);\r\n\r\n    //Chances of pokemon being female is provided in eigths\r\n    const femaleRate = pokemonSpecies.gender_rate;\r\n    const genderRatioFemale = 12.5 * femaleRate;\r\n    const genderRatioMale = 12.5 * (8 - femaleRate);\r\n\r\n    // const catchRate = Math.round((100 / 255) * pokemonSpecies.capture_rate);\r\n    // const hatchSteps = 255 * (pokemonSpecies.hatch_counter + 1);\r\n\r\n    let move_learn_level = {};\r\n    moves.forEach((move) => {\r\n      move.version_group_details.forEach((move_level) => {\r\n        if (move_level.move_learn_method.name === \"level-up\") {\r\n          move_learn_level[move.move.name] = move_level.level_learned_at;\r\n        }\r\n      });\r\n    });\r\n\r\n    let items = Object.keys(move_learn_level).map(function (key) {\r\n      return [key, move_learn_level[key]];\r\n    });\r\n\r\n    // Sort the array based on the second element\r\n    items.sort(function (first, second) {\r\n      return first[1] - second[1];\r\n    });\r\n\r\n    return (\r\n      <Container className=\"mt=2\">\r\n        <Row>\r\n          <Col xs={12} md={6}>\r\n            <Card>\r\n              <Card.Header>\r\n                <h2>{capitaliseName(name)}</h2>\r\n                <img src={front_default} alt={name} />\r\n                <img src={front_shiny} alt={name} />\r\n                <img src={back_default} alt={name} />\r\n                <img src={back_shiny} alt={name} />\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Abilities</h5>\r\n                    {abilities.map((ability, key) => (\r\n                      <div key={key}>\r\n                        <span>\r\n                          {determineAbility(\r\n                            capitaliseName(ability.ability.name),\r\n                            key,\r\n                            abilities.length\r\n                          )}\r\n                        </span>\r\n                      </div>\r\n                    ))}\r\n                  </Col>\r\n                  <Col>\r\n                    <h5>Type(s)</h5>\r\n                    {types.map((type, key) => (\r\n                      <div key={key}>\r\n                        <Badge\r\n                          className={classes.types}\r\n                          inputType={type.type.name}\r\n                        >\r\n                          {capitaliseName(type.type.name)}\r\n                        </Badge>\r\n                      </div>\r\n                    ))}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Height</h5>\r\n                    {height / 10} m\r\n                  </Col>\r\n                  <Col>\r\n                    <h5>Weight</h5>\r\n                    {weight / 10} kg\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Egg Group(s)</h5>\r\n                    {displayEggGroup(pokemonSpecies.egg_groups)}\r\n                  </Col>\r\n                  <Col>\r\n                    <h5>Gender Ratio</h5>\r\n                    {genderRatioMale}% male, {genderRatioFemale}% female\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col xs={12} md={6}>\r\n            <Card>\r\n              <Card.Body>\r\n                <h4>Description</h4>\r\n                {description}\r\n                <h4>Base Stats</h4>\r\n                {stats.map((stat, key) => (\r\n                  <div key={key}>\r\n                    <strong>{displayStat(stat.stat.name)}</strong>\r\n                    <ProgressBar\r\n                      now={stat.base_stat}\r\n                      max={255}\r\n                      label={stat.base_stat}\r\n                    />\r\n                    {/* Max is 255 because it is the highest stat across all Pokemon */}\r\n                  </div>\r\n                ))}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Col xs={12} md={4}>\r\n            <Card>\r\n              <Card.Header>\r\n                <h4>Level Up</h4>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                {items.map((move, key) => (\r\n                  <div key={key}>\r\n                    <h6>{\"Lv \" + move[1] + \": \" + capitaliseName(move[0])}</h6>\r\n                  </div>\r\n                ))}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col xs={12} md={4}>\r\n            <Card>\r\n              <Card.Header>\r\n                <h4>Technical Machine</h4>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                {moves.map((move, key) => (\r\n                  <div key={key}>\r\n                    <h6>\r\n                      {filterMoveType(\r\n                        capitaliseName(move.move.name),\r\n                        move.version_group_details,\r\n                        \"machine\"\r\n                      )}\r\n                    </h6>\r\n                  </div>\r\n                ))}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col xs={12} md={4}>\r\n            <Card>\r\n              <Card.Header>\r\n                <h4>Egg Moves</h4>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                {moves.map((move, key) => (\r\n                  <div key={key}>\r\n                    <h6>\r\n                      {filterMoveType(\r\n                        capitaliseName(move.move.name),\r\n                        move.version_group_details,\r\n                        \"egg\"\r\n                      )}\r\n                    </h6>\r\n                  </div>\r\n                ))}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <center>\r\n        {pokemon !== undefined && (\r\n          <Button\r\n            className={classes.returnToPokedex}\r\n            onClick={() => history.push(\"/\" + nextPreviousPokemon(-1))}\r\n          >\r\n            Previous Pokemon\r\n          </Button>\r\n        )}\r\n        {pokemon !== undefined && (\r\n          <Button\r\n            className={classes.returnToPokedex}\r\n            onClick={() => history.push(\"/\")}\r\n          >\r\n            Back to Pokedex\r\n          </Button>\r\n        )}\r\n        {pokemon !== undefined && (\r\n          <Button\r\n            className={classes.returnToPokedex}\r\n            onClick={() => history.push(\"/\" + nextPreviousPokemon(1))}\r\n          >\r\n            Next Pokemon\r\n          </Button>\r\n        )}\r\n        <br></br>\r\n        {pokemon === undefined && (\r\n          <CircularProgress className={classes.spinnerWrapperStyle} />\r\n        )}\r\n      </center>\r\n      {!!pokemon !== undefined && pokemon && generatePokemonData()}\r\n      {pokemon === false && <Typography>Pokemon not found</Typography>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pokemon;\r\n","import { capitaliseName } from \"../utils/capitaliseName\";\r\n\r\nexport function displayEggGroup(eggGroups) {\r\n  console.log(eggGroups);\r\n  if (eggGroups.length === 1) {\r\n    return capitaliseName(eggGroups[0].name);\r\n  }\r\n  return (\r\n    capitaliseName(eggGroups[0].name) + \", \" + capitaliseName(eggGroups[1].name)\r\n  );\r\n}\r\n","export function determineAbility(string, key, abilityTotalNum) {\r\n  if (key === abilityTotalNum - 1 && abilityTotalNum !== 1) {\r\n    return \"Hidden Ability: \" + string;\r\n  }\r\n  return string;\r\n}\r\n","export function displayStat(string) {\r\n  if (string === \"hp\") {\r\n    return \"HP\";\r\n  } else if (string === \"attack\") {\r\n    return \"Atk\";\r\n  } else if (string === \"defense\") {\r\n    return \"Def\";\r\n  } else if (string === \"special-attack\") {\r\n    return \"Sp.Atk\";\r\n  } else if (string === \"special-defense\") {\r\n    return \"Sp.Def\";\r\n  } else if (string === \"speed\") {\r\n    return \"Speed\";\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Pokedex from \"./components/pokedex\";\r\nimport Pokemon from \"./components/pokemon\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" render={(props) => <Pokedex {...props} />} />\r\n      <Route\r\n        exact\r\n        path=\"/:pokemonId\"\r\n        render={(props) => <Pokemon {...props} />}\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router history={history}>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}